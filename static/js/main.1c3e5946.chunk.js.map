{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["dotenv","config","Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","process","API","fetch","then","res","json","data","results","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAEAA,IAAOC,SACP,IAwBeC,EAbD,SAAC,GAAD,IATQC,EASLC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aAAjC,OACV,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKJ,EAbF,mCAa2BA,EAAe,iKAAkKK,IAAKN,IACzN,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAdLL,EAc2BI,EAbzCJ,GAAQ,EACD,QACAA,GAAQ,EACR,SAEA,QAQH,SACKI,OAET,sBAAKC,UAAU,aAAf,UACI,2CACA,4BAAIF,W,MCoCDK,MAlDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACAC,qBAAU,WACRC,EATgBC,yHAUf,IAEH,IAAMD,EAAY,SAACE,GACjBC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,aAgBrB,OACE,qCACE,mCACE,qBAAKlB,UAAU,WAAWC,IAAI,iBAC9B,sBAAMkB,SAjBW,SAACC,GACtBA,EAAEC,iBAEEd,IACFG,EAtBYC,2FAsBWJ,GACvBC,EAAc,MAYZ,SACE,uBAAOR,UAAU,SAASsB,KAAK,SAC7BC,YAAY,YACZC,MAAOjB,EACPkB,SAZa,SAACL,GACtBZ,EAAcY,EAAEM,OAAOF,eAgBrB,qBAAKxB,UAAU,kBAAf,SACGK,EAAOsB,OAAS,GACftB,EAAOuB,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,eAChBA,GAD4BA,EAAMC,aCzCnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c3e5946.chunk.js","sourcesContent":["import React from 'react';\r\nimport dotenv from 'dotenv'\r\ndotenv.config();\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n// const IMG_API =process.env.REACT_APP_IMG_API;\r\nconst setVoteClass = (vote) => {\r\n    if (vote >= 8) {\r\n        return \"green\"\r\n    } else if (vote >= 7) {\r\n        return \"orenge\"\r\n    } else {\r\n        return \"red\"\r\n    }\r\n}\r\nconst Movie = ({ title, poster_path, overview, vote_average }) =>\r\n    <div className=\"movie\">\r\n        <img src={poster_path ? (IMG_API + poster_path) : 'https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1040&q=80'} alt={title} />\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={`tag ${setVoteClass(vote_average)}`}>\r\n                {vote_average}</span>\r\n        </div>\r\n        <div className=\"movie-over\">\r\n            <h2>Overview:</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n    </div>\r\nexport default Movie;","import React, { useState, useEffect } from 'react';\nimport Movie from './components/Movie';\nimport './App.css';\nimport dotenv from 'dotenv'\n\nconst IMG_API = \"https//image.tmdb.org/t/p/w1280\";\nconst FEATURED_API =process.env.REACT_APP_FEATURED_API;\nconst SEARCH_API =process.env.REACT_APP_SEARCH_API;\n\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    getMovies(FEATURED_API);\n  }, []);\n\n  const getMovies = (API) => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  }\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchTerm) {\n      getMovies(SEARCH_API + searchTerm);\n      setSearchTerm(\"\");\n    }\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <>\n      <header>\n        <img className=\"JudaIcon\" src=\"JudaMove.png\" />\n        <form onSubmit={handleOnSubmit}>\n          <input className=\"search\" type=\"search\"\n            placeholder=\"Search...\"\n            value={searchTerm}\n            onChange={handleOnChange}\n          />\n        </form>\n\n      </header>\n      <div className=\"movie-container\">\n        {movies.length > 0 &&\n          movies.map((movie) => <Movie key={movie.id}\n            {...movie} />)}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}